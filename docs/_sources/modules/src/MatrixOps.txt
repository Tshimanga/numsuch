.. default-domain:: chpl

.. module:: MatrixOps

MatrixOps
=========
**Usage**

.. code-block:: chapel

   use MatrixOps;

.. data:: config param batchsize = 10000

.. class:: NamedMatrix

   
   A matrix of data with named rows and columns.
   


   .. attribute:: var D: domain(2)

   .. attribute:: var SD = CSRDomain(D)

   .. attribute:: var X: [SD] real

   .. attribute:: var rows: BiMap = new BiMap()

   .. attribute:: var cols: BiMap = new BiMap()

   .. method:: proc init()

   .. method:: proc init(X)

   .. method:: proc init(X, names: [] string)

   .. method:: proc init(X, rownames: [] string, colnames: [] string)

   .. method:: proc init(rownames: [] string, colnames: [] string)

   .. method:: proc init(N: NamedMatrix)

   .. method:: proc init(X, rows: BiMap, cols: BiMap)

.. method:: proc NamedMatrix.nrows()

   
   Returns the number of rows in the matrix frame
    

.. method:: proc NamedMatrix.ncols()

   
   Returns the number of columns in the matrix frame
    

.. method:: proc NamedMatrix.rowMax(i: int)

   
   Finds the max along the row indicated by row number
   

.. method:: proc NamedMatrix.rowMax(s: string)

.. method:: proc NamedMatrix.rowMax()

.. method:: proc NamedMatrix.colMax(i: int)

.. method:: proc NamedMatrix.colMax(s: string)

.. method:: proc NamedMatrix.colMax()

.. method:: proc NamedMatrix.rowArgMax(i: int)

.. method:: proc NamedMatrix.rowArgMax(s: string)

.. method:: proc NamedMatrix.rowArgMax()

.. method:: proc NamedMatrix.colArgMax(i: int)

.. method:: proc NamedMatrix.colArgMax(s: string)

.. method:: proc NamedMatrix.colArgMax()

.. method:: proc NamedMatrix.rowMin(i: int)

.. method:: proc NamedMatrix.rowMin(s: string)

.. method:: proc NamedMatrix.rowMin()

.. method:: proc NamedMatrix.colMin(i: int)

.. method:: proc NamedMatrix.colMin(s: string)

.. method:: proc NamedMatrix.colMin()

.. method:: proc NamedMatrix.rowArgMin(i: int)

.. method:: proc NamedMatrix.rowArgMin(s: string)

.. method:: proc NamedMatrix.rowArgMin()

.. method:: proc NamedMatrix.colArgMin(i)

.. method:: proc NamedMatrix.colArgMin(s: string)

.. method:: proc NamedMatrix.colArgMin()

.. method:: proc NamedMatrix.loadX(X: [], shape: 2*(int) = (-1, -1))

   
   Loads the data from X into the internal array, also called X.  We call them all X to keep it clear.
   
   :arg real[]: Array representing the matrix
    

.. method:: proc NamedMatrix.setRowNames(rn: []): string throws

   
   Sets the row names for the matrix X
    

.. method:: proc NamedMatrix.setColNames(cn: []): string throws

   
   Sets the column names for the matrix X

.. method:: proc NamedMatrix.get(i: int, j: int)

   
   Gets the value of the (i,j) entry of the matrix X in the NamedMatrix
   

.. method:: proc NamedMatrix.get(f: string, t: string)

   
   Get the values using the named rows and columns
    

.. method:: proc NamedMatrix.set(i: int, j: int, w: real)

   
   Set the value of this.X(i,j) by index row
   

.. method:: proc NamedMatrix.set(f: string, t: string, w: real)

   
   Set the values using the row and column names

.. method:: proc NamedMatrix.update(i: int, j: int, w: real)

   
   Update the value in X(i,j) with `w`
    

.. method:: proc NamedMatrix.update(f: string, t: string, w: real)

   
   Update the value in X(i,j) with `w` using the row column names. This adds
   `w` to the current value. To replace the current value, use `.set()`
    

.. method:: proc NamedMatrix.remove(i: int, j: int)

   
   Removes the matrix entry `(i,j)` from the matrix and the underlying domain
   by row, column ids
   

.. method:: proc NamedMatrix.remove(i: string, j: string)

   
   Removes the matrix entry `(i,j)` from the matrix and the underlying domain
   by row, column names
   

.. method:: proc NamedMatrix.nnz()

   
   Find the number of non-zeroes in the matrix
    

.. method:: proc NamedMatrix.sparsity()

   
   Calculates the sparsity of the matrix: Number of entries / frame size
    

.. method:: proc NamedMatrix.ntropic(N: NamedMatrix)

.. method:: proc NamedMatrix.ndot(N: NamedMatrix)

   
   Multiplies the current NamedMatrix `X` against the argument `Y`, but first it aligns
   the names of `X.cols` with `Y.rows`.  Returns an appropriately named NamedMatrix
   :arg NamedMatrix Y:
   

.. method:: proc NamedMatrix.alignAndMultiply(Y: NamedMatrix)

.. function:: proc aMax(X: [], axis = 0)

.. function:: proc aMin(X: [], axis: int)

.. function:: proc argMin(X: [], axis: int)

.. function:: proc argMax(X: [], axis: int)

.. function:: proc miniLoc_(axis: int, id, X: [])

.. function:: proc maxiLoc_(axis: int, id, X: [])

.. function:: proc sparseEquals(A: [], B: [])

.. function:: proc tropic(A: [], B: [])

.. function:: proc tropicLimit(B: [] real)

.. function:: proc generateRandomSparseMatrix(size: int, sparsity: real)

   
   Build a random sparse matrix.  Good for testing;
   

.. function:: proc sparsity(X)

.. class:: NumSuchError : Error

   .. method:: proc init()

   .. method:: proc message()

.. class:: DimensionMatchError : NumSuchError

   .. attribute:: var expected: int

   .. attribute:: var actual: int

   .. method:: proc init(expected: int, actual: int)

   .. method:: proc message()

